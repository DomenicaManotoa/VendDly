-- Tabla de roles
CREATE TABLE roles (
    id_rol SERIAL PRIMARY KEY,
    descripcion VARCHAR(100)
);

-- Tabla de usuarios
CREATE TABLE usuarios (
    identificacion VARCHAR(50) PRIMARY KEY,
    rucempresarial VARCHAR(50),
    nombre VARCHAR(100),
    correo VARCHAR(100),
    celular VARCHAR(20),
    contrasena VARCHAR(100),
    salt VARCHAR(64) NOT NULL DEFAULT md5(random()::text),
    estado VARCHAR(50),
    fecha_actualizacion DATE,
    id_rol INT,
    FOREIGN KEY (id_rol) REFERENCES roles(id_rol)
);

-- Tabla de categorías
CREATE TABLE categoria (
    id_categoria SERIAL PRIMARY KEY,
    descripcion VARCHAR(100)
);

-- Tabla de marcas
CREATE TABLE marca (
    id_marca SERIAL PRIMARY KEY,
    descripcion VARCHAR(100)
);

-- Tabla de productos
CREATE TABLE productos (
    id_producto SERIAL PRIMARY KEY,
    nombre VARCHAR(255),
    id_marca INT,
    stock VARCHAR,
    precio_mayorista FLOAT,
    precio_minorista FLOAT,
    id_categoria INT,
    iva FLOAT,
    estado VARCHAR(50),
    imagen VARCHAR(255),
    FOREIGN KEY (id_marca) REFERENCES marca(id_marca),
    FOREIGN KEY (id_categoria) REFERENCES categoria(id_categoria)
);

-- Tabla de clientes (versión inicial sin referencia a ubicación)
CREATE TABLE cliente (
    cod_cliente VARCHAR(50) PRIMARY KEY,
    identificacion VARCHAR(50),
    nombre VARCHAR(100),
    direccion VARCHAR(200),
    celular VARCHAR(20),
    correo VARCHAR(100),  
    tipo_cliente VARCHAR(50),
    razon_social VARCHAR(100),
    sector VARCHAR(100),
    fecha_registro DATE,
    id_ubicacion_principal INT,
    CONSTRAINT fk_identificacion_usuario FOREIGN KEY (identificacion) REFERENCES usuarios(identificacion)
);

-- Tabla de ubicación de clientes (con referencia a cliente)
CREATE TABLE ubicacion_cliente (
    id_ubicacion SERIAL PRIMARY KEY,
    cod_cliente VARCHAR(50) NOT NULL,
    latitud DECIMAL(10, 8) NOT NULL,
    longitud DECIMAL(11, 8) NOT NULL,
    direccion TEXT NOT NULL,
    sector VARCHAR(100) NOT NULL,
    referencia TEXT,
    fecha_registro TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (cod_cliente) REFERENCES cliente(cod_cliente)
);

-- Ahora actualizamos la tabla cliente para agregar la FK a ubicacion_cliente
ALTER TABLE cliente ADD CONSTRAINT fk_ubicacion_principal 
FOREIGN KEY (id_ubicacion_principal) REFERENCES ubicacion_cliente(id_ubicacion);

-- Tabla de rutas
CREATE TABLE ruta (
    id_ruta SERIAL PRIMARY KEY,
    sector VARCHAR(100) NOT NULL,
    direccion VARCHAR(255),
    tipo_ruta VARCHAR(50) NOT NULL,  -- 'Venta' o 'Entrega'
    estado VARCHAR(50) DEFAULT 'Planificada',
    fecha_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    fecha_ejecucion DATE,
    poligono_geojson TEXT
);

-- Tabla de asignación de usuarios a rutas
CREATE TABLE usuario_ruta (
    id_usuario_ruta SERIAL PRIMARY KEY,
    id_ruta INT NOT NULL,
    identificacion_usuario VARCHAR(50) NOT NULL,
    tipo_asignacion VARCHAR(50) NOT NULL,  -- 'Vendedor' o 'Transportista'
    FOREIGN KEY (id_ruta) REFERENCES ruta(id_ruta),
    FOREIGN KEY (identificacion_usuario) REFERENCES usuarios(identificacion),
    CONSTRAINT unique_asignacion UNIQUE (id_ruta, identificacion_usuario, tipo_asignacion)
);

-- Tabla de clientes en ruta
CREATE TABLE ruta_cliente (
    id_ruta_cliente SERIAL PRIMARY KEY,
    id_ruta INT NOT NULL,
    cod_cliente VARCHAR(50) NOT NULL,
    orden_visita INT,
    FOREIGN KEY (id_ruta) REFERENCES ruta(id_ruta),
    FOREIGN KEY (cod_cliente) REFERENCES cliente(cod_cliente),
    CONSTRAINT unique_cliente_ruta UNIQUE (id_ruta, cod_cliente)
);

-- Tabla de pedidos
CREATE TABLE pedido (
    id_pedido SERIAL PRIMARY KEY,
    estado VARCHAR(50),
    numero_pedido VARCHAR,
    fecha_pedido DATE,
    subtotal FLOAT,
    iva FLOAT,
    total FLOAT,
    cod_cliente VARCHAR(50),
    id_ruta_venta INT,
    id_ruta_entrega INT,
    estado_entrega VARCHAR(50) DEFAULT 'Pendiente',
    FOREIGN KEY (cod_cliente) REFERENCES cliente(cod_cliente),
    FOREIGN KEY (id_ruta_venta) REFERENCES ruta(id_ruta),
    FOREIGN KEY (id_ruta_entrega) REFERENCES ruta(id_ruta)
);

-- Tabla de estado de pedidos
CREATE TABLE estado_pedido (
    id_estado_pedido SERIAL PRIMARY KEY,
    id_pedido INT,
    fecha_actualizada DATE,
    descripcion VARCHAR(200),
    FOREIGN KEY (id_pedido) REFERENCES pedido(id_pedido)
);

-- Tabla de detalle de pedidos
CREATE TABLE detalle_pedido (
    id_detalle_pedido SERIAL PRIMARY KEY,
    id_pedido INT,
    id_producto INT,
    cantidad INT,
    precio_unitario FLOAT,
    descuento FLOAT,
    subtotal_lineal FLOAT,
    subtotal FLOAT,
    FOREIGN KEY (id_pedido) REFERENCES pedido(id_pedido),
    FOREIGN KEY (id_producto) REFERENCES productos(id_producto)
);

-- Tabla de asignación de pedidos a rutas de entrega
CREATE TABLE ruta_pedido (
    id_ruta_pedido SERIAL PRIMARY KEY,
    id_ruta INT NOT NULL,
    id_pedido INT NOT NULL,
    orden_entrega INT,
    estado_entrega VARCHAR(50) DEFAULT 'Pendiente',
    fecha_hora_entrega TIMESTAMP,
    observaciones TEXT,
    FOREIGN KEY (id_ruta) REFERENCES ruta(id_ruta),
    FOREIGN KEY (id_pedido) REFERENCES pedido(id_pedido),
    CONSTRAINT unique_pedido_en_ruta UNIQUE (id_pedido)
);

-- Tabla de tracking de ubicación
CREATE TABLE tracking_data (
    id_tracking SERIAL PRIMARY KEY,
    id_ruta INT NOT NULL,
    identificacion_usuario VARCHAR(50) NOT NULL,
    cod_cliente VARCHAR(50),
    latitud DECIMAL(10, 8) NOT NULL,
    longitud DECIMAL(11, 8) NOT NULL,
    precision FLOAT,
    velocidad FLOAT,
    evento VARCHAR(50),
    observaciones TEXT,
    fecha_hora TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_ruta) REFERENCES ruta(id_ruta),
    FOREIGN KEY (identificacion_usuario) REFERENCES usuarios(identificacion),
    FOREIGN KEY (cod_cliente) REFERENCES cliente(cod_cliente)
);

-- Tabla de historial de ubicaciones de repartidores
CREATE TABLE historial_tracking (
    id_historial SERIAL PRIMARY KEY,
    identificacion_usuario VARCHAR(50) NOT NULL,
    latitud DECIMAL(10, 8) NOT NULL,
    longitud DECIMAL(11, 8) NOT NULL,
    fecha_hora TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (identificacion_usuario) REFERENCES usuarios(identificacion)
);

-- Tabla de facturas
CREATE TABLE factura (
    id_factura SERIAL PRIMARY KEY,
    cod_cliente VARCHAR(50),
    numero_factura SERIAL,
    fecha_emision DATE,
    estado VARCHAR(50),
    subtotal FLOAT,
    iva FLOAT,
    total FLOAT,
    FOREIGN KEY (cod_cliente) REFERENCES cliente(cod_cliente)
);

-- Tabla de detalle de facturas
CREATE TABLE detalle_factura (
    id_detalle_factura SERIAL PRIMARY KEY,
    id_factura INT,
    id_producto INT,
    cantidad INT,
    precio_unitario FLOAT,
    iva_producto FLOAT,
    subtotal_lineal FLOAT,
    FOREIGN KEY (id_factura) REFERENCES factura(id_factura),
    FOREIGN KEY (id_producto) REFERENCES productos(id_producto)
);